// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaDeAgendamentos.Context;

#nullable disable

namespace SistemaDeAgendamentos.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240723001446_MigracaoInicial")]
    partial class MigracaoInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Agenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("Horario")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Agendas");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgendaId")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeSpan?>("Horario")
                        .HasColumnType("time(6)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("AgendaId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Nota")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.AvaliacaoAgendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgendamentoId")
                        .HasColumnType("int");

                    b.Property<int?>("AvaliacaoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgendamentoId");

                    b.HasIndex("AvaliacaoId");

                    b.ToTable("AvaliacoesAgendamento");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.AvaliacaoEstabelecimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AvaliacaoId")
                        .HasColumnType("int");

                    b.Property<int?>("EstabelecimentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvaliacaoId");

                    b.HasIndex("EstabelecimentoId");

                    b.ToTable("AvaliacoesEstabelecimento");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("EstabelecimentoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("EstabelecimentoId");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.CategoriaEstabelecimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("CategoriasEstabelecimentos");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.ClienteContato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("ContatoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ContatoId");

                    b.ToTable("ClienteContatos");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ddd")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cep")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Cidade")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complemento")
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Numero")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Referencia")
                        .HasColumnType("longtext");

                    b.Property<string>("Rua")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Estabelecimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("Logotipo")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("ProprietarioId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("ProprietarioId");

                    b.ToTable("Estabelecimentos");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.EstabelecimentoContato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContatoId")
                        .HasColumnType("int");

                    b.Property<int?>("EstabelecimentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContatoId");

                    b.HasIndex("EstabelecimentoId");

                    b.ToTable("EstabelecimentoContatos");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CargoId")
                        .HasColumnType("int");

                    b.Property<int?>("EstabelecimentoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.HasIndex("EstabelecimentoId");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.FuncionarioServico", b =>
                {
                    b.Property<int>("ServicoId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("ServicoId", "FuncionarioId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("FuncionariosServicos");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.HorarioAtendimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaSemana")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("EstabelecimentoId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("HorarioFim")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("HorarioInicio")
                        .HasColumnType("time(6)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EstabelecimentoId");

                    b.ToTable("HorariosAtendimento");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Proprietario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ImagemPerfil")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Proprietarios");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.ProprietarioContato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContatoId")
                        .HasColumnType("int");

                    b.Property<int?>("ProprietarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContatoId");

                    b.HasIndex("ProprietarioId");

                    b.ToTable("ProprietarioContatos");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<int?>("EstabelecimentoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("Preco")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("EstabelecimentoId");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Agenda", b =>
                {
                    b.HasOne("SistemaDeAgendamentos.Models.Funcionario", "Funcionario")
                        .WithMany("Agendas")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Agendamento", b =>
                {
                    b.HasOne("SistemaDeAgendamentos.Models.Agenda", "Agenda")
                        .WithMany("Agendamentos")
                        .HasForeignKey("AgendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeAgendamentos.Models.Cliente", "Cliente")
                        .WithMany("Agendamentos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agenda");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.AvaliacaoAgendamento", b =>
                {
                    b.HasOne("SistemaDeAgendamentos.Models.Agendamento", "Agendamento")
                        .WithMany("AvaliacoesAgendamento")
                        .HasForeignKey("AgendamentoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SistemaDeAgendamentos.Models.Avaliacao", "Avaliacao")
                        .WithMany()
                        .HasForeignKey("AvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Agendamento");

                    b.Navigation("Avaliacao");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.AvaliacaoEstabelecimento", b =>
                {
                    b.HasOne("SistemaDeAgendamentos.Models.Avaliacao", "Avaliacao")
                        .WithMany()
                        .HasForeignKey("AvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SistemaDeAgendamentos.Models.Estabelecimento", "Estabelecimento")
                        .WithMany("AvaliacoesEstabelecimento")
                        .HasForeignKey("EstabelecimentoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Avaliacao");

                    b.Navigation("Estabelecimento");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Cargo", b =>
                {
                    b.HasOne("SistemaDeAgendamentos.Models.Estabelecimento", "Estabelecimento")
                        .WithMany()
                        .HasForeignKey("EstabelecimentoId");

                    b.Navigation("Estabelecimento");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.ClienteContato", b =>
                {
                    b.HasOne("SistemaDeAgendamentos.Models.Cliente", "Cliente")
                        .WithMany("ClienteContatos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SistemaDeAgendamentos.Models.Contato", "Contato")
                        .WithMany("ClienteContatos")
                        .HasForeignKey("ContatoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Cliente");

                    b.Navigation("Contato");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Estabelecimento", b =>
                {
                    b.HasOne("SistemaDeAgendamentos.Models.Endereco", "Endereco")
                        .WithMany("Estabelecimentos")
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SistemaDeAgendamentos.Models.Proprietario", "Proprietario")
                        .WithMany("Estabelecimentos")
                        .HasForeignKey("ProprietarioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Endereco");

                    b.Navigation("Proprietario");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.EstabelecimentoContato", b =>
                {
                    b.HasOne("SistemaDeAgendamentos.Models.Contato", "Contato")
                        .WithMany("EstabelecimentoContatos")
                        .HasForeignKey("ContatoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SistemaDeAgendamentos.Models.Estabelecimento", "Estabelecimento")
                        .WithMany("EstabelecimentoContatos")
                        .HasForeignKey("EstabelecimentoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Contato");

                    b.Navigation("Estabelecimento");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Funcionario", b =>
                {
                    b.HasOne("SistemaDeAgendamentos.Models.Cargo", "Cargo")
                        .WithMany("Funcionarios")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SistemaDeAgendamentos.Models.Estabelecimento", "Estabelecimento")
                        .WithMany("Funcionarios")
                        .HasForeignKey("EstabelecimentoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Cargo");

                    b.Navigation("Estabelecimento");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.FuncionarioServico", b =>
                {
                    b.HasOne("SistemaDeAgendamentos.Models.Funcionario", "Funcionario")
                        .WithMany("FuncionariosServicos")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeAgendamentos.Models.Servico", "Servico")
                        .WithMany("FuncionariosServicos")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.HorarioAtendimento", b =>
                {
                    b.HasOne("SistemaDeAgendamentos.Models.Estabelecimento", "Estabelecimento")
                        .WithMany("HorariosAtendimento")
                        .HasForeignKey("EstabelecimentoId");

                    b.Navigation("Estabelecimento");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.ProprietarioContato", b =>
                {
                    b.HasOne("SistemaDeAgendamentos.Models.Contato", "Contato")
                        .WithMany("ProprietarioContatos")
                        .HasForeignKey("ContatoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SistemaDeAgendamentos.Models.Proprietario", "Proprietario")
                        .WithMany("ProprietarioContatos")
                        .HasForeignKey("ProprietarioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Contato");

                    b.Navigation("Proprietario");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Servico", b =>
                {
                    b.HasOne("SistemaDeAgendamentos.Models.Estabelecimento", "Estabelecimento")
                        .WithMany("Servicos")
                        .HasForeignKey("EstabelecimentoId");

                    b.Navigation("Estabelecimento");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Agenda", b =>
                {
                    b.Navigation("Agendamentos");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Agendamento", b =>
                {
                    b.Navigation("AvaliacoesAgendamento");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Cargo", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Cliente", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("ClienteContatos");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Contato", b =>
                {
                    b.Navigation("ClienteContatos");

                    b.Navigation("EstabelecimentoContatos");

                    b.Navigation("ProprietarioContatos");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Endereco", b =>
                {
                    b.Navigation("Estabelecimentos");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Estabelecimento", b =>
                {
                    b.Navigation("AvaliacoesEstabelecimento");

                    b.Navigation("EstabelecimentoContatos");

                    b.Navigation("Funcionarios");

                    b.Navigation("HorariosAtendimento");

                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Funcionario", b =>
                {
                    b.Navigation("Agendas");

                    b.Navigation("FuncionariosServicos");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Proprietario", b =>
                {
                    b.Navigation("Estabelecimentos");

                    b.Navigation("ProprietarioContatos");
                });

            modelBuilder.Entity("SistemaDeAgendamentos.Models.Servico", b =>
                {
                    b.Navigation("FuncionariosServicos");
                });
#pragma warning restore 612, 618
        }
    }
}
